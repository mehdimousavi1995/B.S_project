
redis {
  port: 6379
  port: ${?REDIS_PORT}

  host: "127.0.0.1"
  host: ${?REDIS_HOST}

  password: "foobared"
  password: ${?REDIS_PASSWORD}
}

rabbit9 {
  connection {
    hosts: ["127.0.0.1"]
    port: 5672
    username: "test"
    password: "test"
    connection-number: 1
    channel-per-connection: 10
    connection-retry-interval: 10 seconds
  }

  internal {
    default-exchange-name: "amq.direct"
    default-exchange-type: "direct"
    confirm-select: true // Enables publisher acknowledgements on channels
    routing-timeout: 5 seconds // Ask timeout for get your future value from rabbit9 router
    dispatcher: "rabbit9.default-dispatcher"
    subscription-retry-count: 20
    retry-min-backoff: 1 seconds
    retry-max-backoff: 5 seconds
    channel-message-timeout: 5 seconds

  }

  default-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 4
    }
    throughput = 100
  }

}

services {
  kafka {
    producer {
      bootstrap.servers = "127.0.0.1:9092"
    }
    consumer {
      bootstrap.servers = "127.0.0.1:9092"
      commit-time-warning = 120
      wakeup-debug = false
      wakeup-timeout = 30s

    }
  }

  postgresql {
    db {
      host: "127.0.0.1"
      host: ${?POSTGRES_HOST}

      db: "test"
      db: ${?POSTGRES-DB}

      user: "test"
      user: ${?POSTGRES-USERNAME}

      password: "test"
      password: ${?POSTGRES_PASSWORD}
      port: 5432

      numThreads: 2
      maxConnections: 4
      connectionTimeout: 1000

      migration {
        test-mode: false
      }
    }
  }
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = on
  loglevel = "debug"

}